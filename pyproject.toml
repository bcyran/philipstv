[tool.poetry]
name = "philipstv"
version = "0.0.0"  # this will be set during build by poetry-dynamic-versioning
description = "CLI and library to control Philips Android-powered TVs."
license = "MIT"
authors = ["Bazyli Cyran <bazyli@cyran.dev>"]
readme = "README.rst"
repository = "https://github.com/bcyran/philipstv"
documentation = "https://philipstv.readthedocs.io"
keywords = ["cli", "tv", "api-wrapper", "philips", "ambilight"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Typing :: Typed"
]
packages = [
    { include = "philipstv", from = "src"}
]
include = [
    { path = "src/philipstv/**/*.py" },
    { path = "src/philipstv/py.typed" },
    { path = "tests/**/*.py", format = "sdist" }
]


[tool.poetry.scripts]
philipstv = "philipstv.__main__:wrapped_cli"

[tool.poetry.dependencies]
python = "^3.9"
requests = "^2.27.1"
pydantic = "^2.4.2"
click = { version = "^8.0.3", optional = true }
appdirs = { version = "^1.4.4", optional = true }
Sphinx = { version = "^7.2.6", optional = true }
furo = { version = "^2023.3.27", optional = true }
enum-tools = {extras = ["sphinx"], version = "^0.11.0", optional = true }

[tool.poetry.extras]
cli = ["click", "appdirs"]
docs = ["sphinx", "furo", "enum-tools"]

[tool.poetry.dev-dependencies]
pytest = "^7.4.3"
black = "^23.11.0"
mypy = "^1.7"
flake8 = "^6.1.0"
isort = "^5.12.0"
tox = "^4.11.4"
types-requests = "^2.31.0"
requests-mock = "^1.11.0"
pytest-cov = "^4.1.0"
types-appdirs = "^1.4.3"
sphinx-autobuild = "^2021.3.14"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"
pattern = """(?x)
^(?P<base>\\d+(\\.\\d+)*)
(-?((?P<stage>[a-zA-Z]+)\\.?(?P<revision>\\d+)?))?
(\\+(?P<tagged_metadata>.+))?$
"""

[tool.poetry-dynamic-versioning.substitution]
files = ["src/philipstv/__init__.py"]

[tool.mypy]
strict = true
show_error_codes = true
plugins = [
    "pydantic.mypy"
]

[tool.black]
line-length = 100

[tool.isort]
profile = "black"
line_length = 100

[tool.coverage.run]
source = ["philipstv"]
omit = [
    "src/philipstv/__main__.py"
]

[tool.coverage.report]
show_missing = true
skip_covered = true
skip_empty = true
exclude_lines = [
    "raise NotImplementedError",
    "pass"
]
